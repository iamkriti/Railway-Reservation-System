{"ast":null,"code":"import config from './config.json';\nvar baseUrl = config.baseUrl;\nexport function login(body) {\n  return callPost(baseUrl + '/login', body);\n}\nexport function register(body) {\n  return callPost(baseUrl + '/register', body);\n}\nexport function routes() {\n  return callGet(baseUrl + '/railway/routes');\n}\nexport function route(station) {\n  return callGet(baseUrl + '/railway/route/' + station);\n}\nexport function trains() {\n  return callGet(baseUrl + '/railway/trains/');\n}\nexport function trainsByRoute(route) {\n  return callGet(baseUrl + '/railway/trains/' + route);\n}\nexport function classes() {\n  return callGet(baseUrl + '/railway/classes/');\n}\nexport function schedules() {\n  return callGet(baseUrl + '/railway/schedules/');\n}\nexport function validateCard(body) {\n  return callPost(baseUrl + '/payment/card', body);\n}\nexport function validatePhone(body) {\n  return callPost(baseUrl + '/payment/phone', body);\n}\nexport function makeReservation(body) {\n  return callPost(baseUrl + '/railway/reservations', body);\n}\nexport function getReservations(user) {\n  return callGet(baseUrl + '/railway/reservations/' + user);\n}\nexport function deleteReservation(id) {\n  return callDelete(baseUrl + '/railway/reservations/' + id);\n}\nexport function updateAccount(body, id) {\n  return callPut(baseUrl + '/users/' + id, body);\n}\nexport function contact(body) {\n  return callPost(baseUrl + '/railway/contact', body);\n}\n\nvar callGet = function callGet(url) {\n  return fetch(url).then(handleres);\n};\n\nvar callPost = function callPost(url, body) {\n  return fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(handleres);\n};\n\nvar callPut = function callPut(url, body) {\n  return fetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(body),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(handleres);\n};\n\nvar callDelete = function callDelete(url) {\n  return fetch(url, {\n    method: 'DELETE'\n  }).then(handleres);\n};\n\nvar handleres = function handleres(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    if (res.status === 404) {\n      return Promise.reject();\n    } else {\n      throw res.json();\n    }\n  }\n};","map":{"version":3,"sources":["C:\\Users\\kreet\\OneDrive\\Desktop\\HCI project codes\\web\\src\\Services.js"],"names":["config","baseUrl","login","body","callPost","register","routes","callGet","route","station","trains","trainsByRoute","classes","schedules","validateCard","validatePhone","makeReservation","getReservations","user","deleteReservation","id","callDelete","updateAccount","callPut","contact","url","fetch","then","handleres","method","JSON","stringify","headers","res","ok","json","status","Promise","reject"],"mappings":"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","sourcesContent":["import config from './config.json'\n\nconst baseUrl = config.baseUrl\n\nexport function login(body) {\n    return callPost(baseUrl + '/login', body);\n}\n\nexport function register(body) {\n    return callPost(baseUrl + '/register', body);\n}\n\nexport function routes() {\n    return callGet(baseUrl + '/railway/routes');\n}\n\nexport function route(station) {\n    return callGet(baseUrl + '/railway/route/' + station);\n}\n\nexport function trains() {\n    return callGet(baseUrl + '/railway/trains/');\n}\n\nexport function trainsByRoute(route) {\n    return callGet(baseUrl + '/railway/trains/' + route);\n}\n\nexport function classes() {\n    return callGet(baseUrl + '/railway/classes/');\n}\n\nexport function schedules() {\n    return callGet(baseUrl + '/railway/schedules/');\n}\n\nexport function validateCard(body) {\n    return callPost(baseUrl + '/payment/card', body);\n}\n\nexport function validatePhone(body) {\n    return callPost(baseUrl + '/payment/phone', body);\n}\n\nexport function makeReservation(body) {\n    return callPost(baseUrl + '/railway/reservations', body);\n}\n\nexport function getReservations(user) {\n    return callGet(baseUrl + '/railway/reservations/' + user);\n}\n\nexport function deleteReservation(id) {\n    return callDelete(baseUrl + '/railway/reservations/' + id);\n}\n\nexport function updateAccount(body, id) {\n    return callPut(baseUrl + '/users/' + id, body)\n}\n\nexport function contact(body) {\n    return callPost(baseUrl + '/railway/contact', body);\n}\n\nconst callGet = (url) => {\n    return fetch(url).then(handleres);\n}\n\nconst callPost = (url, body) => {\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: { \"Content-Type\": \"application/json\" }\n    }).then(handleres);\n}\n\nconst callPut = (url, body) => {\n    return fetch(url, {\n        method: 'PUT',\n        body: JSON.stringify(body),\n        headers: { \"Content-Type\": \"application/json\" }\n    }).then(handleres);\n}\n\nconst callDelete = (url) => {\n    return fetch(url, {\n        method: 'DELETE'\n    }).then(handleres);\n}\n\nconst handleres = (res) => {\n    if (res.ok) {\n        return res.json();\n    }\n    else {\n        if (res.status === 404) {\n            return Promise.reject();\n        } else {\n            throw res.json();\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}