{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\src\\\\components\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Form, Col } from 'react-bootstrap';\nimport { register } from '../Services';\nimport { toast } from 'react-toastify';\nimport { getHash } from './commons/Functions';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register(props, context) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props, context));\n\n    _this.handleChange = function (type) {\n      return function (event) {\n        var value = event;\n\n        if (event.target) {\n          value = event.target.value;\n        }\n\n        _this.setState(_defineProperty({}, type, value));\n      };\n    };\n\n    _this.handleSubmit = function (event) {\n      _this.setState({\n        modalShowErr: false\n      });\n\n      var form = event.currentTarget;\n\n      if (form.checkValidity() === true) {\n        var body = _objectSpread({}, _this.state, {\n          password: getHash(_this.state.password)\n        });\n\n        register(body).then(function (res) {\n          toast.success(\"Account Created Please Sign In\");\n\n          _this.loginClick();\n        }).catch(function (err) {\n          if (err.then && typeof err.then === 'function') {\n            err.then(function (e) {\n              toast.error(\"Unable to register the new user\");\n\n              if (e.exist) {\n                _this.setState({\n                  modalShowErr: true\n                });\n              }\n            });\n          } else {\n            console.log(err);\n          }\n        });\n      } // this.setState({ validated: true }) \n\n\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    _this.loginClick = function () {\n      _this.props.handleClose();\n\n      _this.props.handleLoginShow();\n    };\n\n    _this.state = {\n      // validated: false,\n      modalShowErr: false,\n      modalErrMsg: \"Entered email already exist!!!\"\n    };\n    _this.baseState = _this.state;\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState(this.baseState);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Modal, {\n        show: this.props.showRegister,\n        onHide: this.props.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridFName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"First name\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"username\",\n        placeholder: \"Enter first name\",\n        onChange: this.handleChange('fname'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridLName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Last name\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"username\",\n        placeholder: \"Enter last name\",\n        onChange: this.handleChange('lname'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))), React.createElement(Form.Group, {\n        controlId: \"formGridPhone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"username\",\n        placeholder: \"Enter Phone Number\",\n        onChange: this.handleChange('phone'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formGridNIC\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"NIC\"), React.createElement(Form.Control, {\n        type: \"username\",\n        placeholder: \"Enter NIC (Optional)\",\n        onChange: this.handleChange('nic'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"controlTextarea1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Address\"), React.createElement(Form.Control, {\n        required: true,\n        as: \"textarea\",\n        rows: \"3\",\n        onChange: this.handleChange('address'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formGridEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"email\",\n        placeholder: \"Enter email\",\n        onChange: this.handleChange('email'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formBasicPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"password\",\n        placeholder: \"Enter Password\",\n        onChange: this.handleChange('password'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), this.state.modalShowErr && React.createElement(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.modalErrMsg), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Create account\")), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"light\",\n        block: true,\n        onClick: this.loginClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Sign in\"))));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":{"version":3,"sources":["C:\\Users\\kreet\\OneDrive\\Desktop\\HCI project codes\\web\\src\\components\\Register.js"],"names":["React","Component","Modal","Button","Form","Col","register","toast","getHash","Register","props","context","handleChange","type","event","value","target","setState","handleSubmit","modalShowErr","form","currentTarget","checkValidity","body","state","password","then","res","success","loginClick","catch","err","e","error","exist","console","log","preventDefault","stopPropagation","handleClose","handleLoginShow","modalErrMsg","baseState","showRegister","color"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,GAA9B,QAAyC,iBAAzC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,OAAT,QAAwB,qBAAxB;;IAEMC,Q;;;;;AAEF,oBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AACxB,kFAAMD,KAAN,EAAaC,OAAb;;AADwB,UAc5BC,YAd4B,GAcb,UAAAC,IAAI;AAAA,aAAI,UAAAC,KAAK,EAAI;AAC5B,YAAIC,KAAK,GAAGD,KAAZ;;AACA,YAAIA,KAAK,CAACE,MAAV,EAAkB;AACdD,UAAAA,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAArB;AACH;;AACD,cAAKE,QAAL,qBAAiBJ,IAAjB,EAAwBE,KAAxB;AACH,OANkB;AAAA,KAdS;;AAAA,UAsB5BG,YAtB4B,GAsBb,UAAAJ,KAAK,EAAI;AACpB,YAAKG,QAAL,CAAc;AAAEE,QAAAA,YAAY,EAAE;AAAhB,OAAd;;AACA,UAAMC,IAAI,GAAGN,KAAK,CAACO,aAAnB;;AAEA,UAAID,IAAI,CAACE,aAAL,OAAyB,IAA7B,EAAmC;AAC/B,YAAIC,IAAI,qBAAQ,MAAKC,KAAb;AAAoBC,UAAAA,QAAQ,EAAEjB,OAAO,CAAC,MAAKgB,KAAL,CAAWC,QAAZ;AAArC,UAAR;;AACAnB,QAAAA,QAAQ,CAACiB,IAAD,CAAR,CACKG,IADL,CACU,UAAAC,GAAG,EAAI;AACTpB,UAAAA,KAAK,CAACqB,OAAN,CAAc,gCAAd;;AACA,gBAAKC,UAAL;AACH,SAJL,EAKKC,KALL,CAKW,UAAAC,GAAG,EAAI;AACV,cAAIA,GAAG,CAACL,IAAJ,IAAY,OAAOK,GAAG,CAACL,IAAX,KAAoB,UAApC,EAAgD;AAC5CK,YAAAA,GAAG,CAACL,IAAJ,CAAS,UAAAM,CAAC,EAAI;AACVzB,cAAAA,KAAK,CAAC0B,KAAN,CAAY,iCAAZ;;AACA,kBAAID,CAAC,CAACE,KAAN,EAAa;AACT,sBAAKjB,QAAL,CAAc;AAAEE,kBAAAA,YAAY,EAAE;AAAhB,iBAAd;AACH;AACJ,aALD;AAMH,WAPD,MAOO;AACHgB,YAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACH;AACJ,SAhBL;AAiBH,OAvBmB,CAwBpB;;;AACAjB,MAAAA,KAAK,CAACuB,cAAN;AACAvB,MAAAA,KAAK,CAACwB,eAAN;AACH,KAjD2B;;AAAA,UAmD5BT,UAnD4B,GAmDf,YAAM;AACf,YAAKnB,KAAL,CAAW6B,WAAX;;AACA,YAAK7B,KAAL,CAAW8B,eAAX;AACH,KAtD2B;;AAExB,UAAKhB,KAAL,GAAa;AACT;AACAL,MAAAA,YAAY,EAAE,KAFL;AAGTsB,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKA,UAAKC,SAAL,GAAiB,MAAKlB,KAAtB;AAPwB;AAQ3B;;;;2CAEsB;AACnB,WAAKP,QAAL,CAAc,KAAKyB,SAAnB;AACH;;;6BA4CQ;AAAA;;AAEL,aACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWiC,YAAxB;AAAsC,QAAA,MAAM,EAAE,KAAKjC,KAAL,CAAW6B,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,kBAAAP,CAAC;AAAA,iBAAI,MAAI,CAACd,YAAL,CAAkBc,CAAlB,CAAJ;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAE3B,GAAhB;AAAqB,QAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,QAAQ,MAAtB;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,WAAW,EAAC,kBAAnD;AAAsE,QAAA,QAAQ,EAAE,KAAKO,YAAL,CAAkB,OAAlB,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAMI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAEP,GAAhB;AAAqB,QAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,QAAQ,MAAtB;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,WAAW,EAAC,iBAAnD;AAAqE,QAAA,QAAQ,EAAE,KAAKO,YAAL,CAAkB,OAAlB,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANJ,CADJ,EAYI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,QAAQ,MAAtB;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,WAAW,EAAC,oBAAnD;AAAwE,QAAA,QAAQ,EAAE,KAAKA,YAAL,CAAkB,OAAlB,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAZJ,EAgBI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,UAAnB;AAA8B,QAAA,WAAW,EAAC,sBAA1C;AAAiE,QAAA,QAAQ,EAAE,KAAKA,YAAL,CAAkB,KAAlB,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAhBJ,EAoBI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,QAAQ,MAAtB;AAAuB,QAAA,EAAE,EAAC,UAA1B;AAAqC,QAAA,IAAI,EAAC,GAA1C;AAA8C,QAAA,QAAQ,EAAE,KAAKA,YAAL,CAAkB,SAAlB,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CApBJ,EAwBI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,QAAQ,MAAtB;AAAuB,QAAA,IAAI,EAAC,OAA5B;AAAoC,QAAA,WAAW,EAAC,aAAhD;AAA8D,QAAA,QAAQ,EAAE,KAAKA,YAAL,CAAkB,OAAlB,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAxBJ,EA4BI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,QAAQ,MAAtB;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,WAAW,EAAC,gBAAnD;AAAoE,QAAA,QAAQ,EAAE,KAAKA,YAAL,CAAkB,UAAlB,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA5BJ,EAgCK,KAAKY,KAAL,CAAWL,YAAX,IAA2B;AAAG,QAAA,KAAK,EAAE;AAAEyB,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKpB,KAAL,CAAWiB,WAAxC,CAhChC,EAiCI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAwC,QAAA,KAAK,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjCJ,CAHJ,EAwCI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,OAAhB;AAAwB,QAAA,KAAK,MAA7B;AAA8B,QAAA,OAAO,EAAE,KAAKZ,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAxCJ,CADJ,CADJ;AAkDH;;;;EA9GkB5B,S;;AAiHvB,eAAeQ,QAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport { Modal, Button, Form, Col } from 'react-bootstrap'\nimport { register } from '../Services'\nimport { toast } from 'react-toastify'\nimport { getHash } from './commons/Functions'\n\nclass Register extends Component {\n\n    constructor(props, context) {\n        super(props, context)\n        this.state = {\n            // validated: false,\n            modalShowErr: false,\n            modalErrMsg: \"Entered email already exist!!!\",\n        }\n        this.baseState = this.state\n    }\n\n    componentWillUnmount() {\n        this.setState(this.baseState)\n    }\n\n    handleChange = type => event => {\n        let value = event\n        if (event.target) {\n            value = event.target.value\n        }\n        this.setState({ [type]: value })\n    }\n\n    handleSubmit = event => {\n        this.setState({ modalShowErr: false })\n        const form = event.currentTarget\n\n        if (form.checkValidity() === true) {\n            var body = { ...this.state, password: getHash(this.state.password) }\n            register(body)\n                .then(res => {\n                    toast.success(\"Account Created Please Sign In\")\n                    this.loginClick()\n                })\n                .catch(err => {\n                    if (err.then && typeof err.then === 'function') {\n                        err.then(e => {\n                            toast.error(\"Unable to register the new user\")\n                            if (e.exist) {\n                                this.setState({ modalShowErr: true })\n                            }\n                        })\n                    } else {\n                        console.log(err)\n                    }\n                })\n        }\n        // this.setState({ validated: true }) \n        event.preventDefault()\n        event.stopPropagation()\n    }\n\n    loginClick = () => {\n        this.props.handleClose()\n        this.props.handleLoginShow()\n    }\n\n    render() {\n\n        return (\n            <Modal show={this.props.showRegister} onHide={this.props.handleClose}>\n                <Form onSubmit={e => this.handleSubmit(e)}>\n                    <Modal.Header closeButton>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridFName\">\n                                <Form.Label>First name</Form.Label>\n                                <Form.Control required type=\"username\" placeholder=\"Enter first name\" onChange={this.handleChange('fname')} />\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridLName\">\n                                <Form.Label>Last name</Form.Label>\n                                <Form.Control required type=\"username\" placeholder=\"Enter last name\" onChange={this.handleChange('lname')} />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Group controlId=\"formGridPhone\">\n                            <Form.Label>Phone</Form.Label>\n                            <Form.Control required type=\"username\" placeholder=\"Enter Phone Number\" onChange={this.handleChange('phone')} />\n                        </Form.Group>\n                        <Form.Group controlId=\"formGridNIC\">\n                            <Form.Label>NIC</Form.Label>\n                            <Form.Control type=\"username\" placeholder=\"Enter NIC (Optional)\" onChange={this.handleChange('nic')} />\n                        </Form.Group>\n                        <Form.Group controlId=\"controlTextarea1\">\n                            <Form.Label>Address</Form.Label>\n                            <Form.Control required as=\"textarea\" rows=\"3\" onChange={this.handleChange('address')} />\n                        </Form.Group>\n                        <Form.Group controlId=\"formGridEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control required type=\"email\" placeholder=\"Enter email\" onChange={this.handleChange('email')} />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required type=\"password\" placeholder=\"Enter Password\" onChange={this.handleChange('password')} />\n                        </Form.Group>\n                        {this.state.modalShowErr && <p style={{ color: 'red' }}>{this.state.modalErrMsg}</p>}\n                        <Button variant=\"primary\" type=\"submit\" block>\n                            Create account\n                        </Button>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"light\" block onClick={this.loginClick}>\n                            Sign in\n                        </Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal >\n        )\n    }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}