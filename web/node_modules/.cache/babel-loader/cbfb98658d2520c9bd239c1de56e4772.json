{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kreet\\\\OneDrive\\\\Desktop\\\\HCI project codes\\\\web\\\\src\\\\components\\\\AccountSettings.js\";\nimport React, { Component } from 'react';\nimport { Col, Button, Form, Card, Row } from 'react-bootstrap';\nimport { updateAccount } from '../Services';\nimport { toast } from 'react-toastify';\nimport { getHash } from './commons/Functions';\n\nvar AccountSettings =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AccountSettings, _Component);\n\n  function AccountSettings(props, context) {\n    var _this;\n\n    _classCallCheck(this, AccountSettings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AccountSettings).call(this, props, context));\n\n    _this.handleChange = function (type) {\n      return function (event) {\n        var value = event;\n\n        if (event.target) {\n          value = event.target.value;\n        }\n\n        _this.setState(_defineProperty({}, type, value));\n      };\n    };\n\n    _this.handleSubmit = function (event) {\n      var form = event.currentTarget;\n\n      var id = JSON.parse(localStorage.getItem('user'))._id;\n\n      if (form.checkValidity() === true) {\n        var body = _objectSpread({}, _this.state);\n\n        if (_this.state.password) {\n          body = _objectSpread({}, body, {\n            password: getHash(_this.state.password)\n          });\n        }\n\n        updateAccount(body, id).then(function (res) {\n          toast.success(\"Account updated!!!\");\n          localStorage.setItem('user', JSON.stringify(res));\n        }).catch(function (err) {\n          toast.error(\"Unable to update new data!!!\");\n        });\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    _this.state = {\n      fname: '',\n      lname: '',\n      phone: '',\n      nic: '',\n      email: '',\n      address: ''\n    };\n    _this.baseState = _this.state;\n    return _this;\n  }\n\n  _createClass(AccountSettings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var user = localStorage.getItem('user');\n\n      if (user) {\n        user = JSON.parse(user);\n        this.setState({\n          fname: user.fname,\n          lname: user.lname,\n          phone: user.phone,\n          nic: user.nic || '',\n          email: user.email,\n          address: user.address\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      var user = localStorage.getItem('user');\n\n      if (!user) {\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Row, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          width: '60%',\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          padding: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridFName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"First name\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"username\",\n        placeholder: \"Enter first name\",\n        onChange: this.handleChange('fname'),\n        value: this.state.fname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridLName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Last name\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"username\",\n        placeholder: \"Enter last name\",\n        onChange: this.handleChange('lname'),\n        value: this.state.lname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPhone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"username\",\n        placeholder: \"Enter Phone Number\",\n        onChange: this.handleChange('phone'),\n        value: this.state.phone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridNIC\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"NIC\"), React.createElement(Form.Control, {\n        type: \"username\",\n        placeholder: \"Enter NIC\",\n        onChange: this.handleChange('nic'),\n        value: this.state.nic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))), React.createElement(Form.Group, {\n        controlId: \"controlTextarea1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Address\"), React.createElement(Form.Control, {\n        required: true,\n        as: \"textarea\",\n        rows: \"3\",\n        onChange: this.handleChange('address'),\n        value: this.state.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formGridEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"email\",\n        placeholder: \"Enter email\",\n        onChange: this.handleChange('email'),\n        value: this.state.email,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formBasicPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Enter New Password\",\n        onChange: this.handleChange('password'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(Col, {\n        style: {\n          paddingRight: 0\n        },\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Update account\")))))));\n    }\n  }]);\n\n  return AccountSettings;\n}(Component);\n\nexport default AccountSettings;","map":{"version":3,"sources":["C:\\Users\\kreet\\OneDrive\\Desktop\\HCI project codes\\web\\src\\components\\AccountSettings.js"],"names":["React","Component","Col","Button","Form","Card","Row","updateAccount","toast","getHash","AccountSettings","props","context","handleChange","type","event","value","target","setState","handleSubmit","form","currentTarget","id","JSON","parse","localStorage","getItem","_id","checkValidity","body","state","password","then","res","success","setItem","stringify","catch","err","error","preventDefault","stopPropagation","fname","lname","phone","nic","email","address","baseState","user","history","push","alignItems","justifyContent","width","padding","e","paddingRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { Col, Button, Form, Card, Row } from 'react-bootstrap'\nimport { updateAccount } from '../Services'\nimport { toast } from 'react-toastify'\nimport { getHash } from './commons/Functions'\n\nclass AccountSettings extends Component {\n\n    constructor(props, context) {\n        super(props, context)\n        this.state = {\n            fname: '',\n            lname: '',\n            phone: '',\n            nic: '',\n            email: '',\n            address: ''\n        }\n        this.baseState = this.state\n    }\n\n    componentDidMount() {\n        var user = localStorage.getItem('user')\n        if (user) {\n            user = JSON.parse(user)\n            this.setState({\n                fname: user.fname,\n                lname: user.lname,\n                phone: user.phone,\n                nic: user.nic || '',\n                email: user.email,\n                address: user.address\n            })\n        }\n    }\n\n    componentWillUpdate() {\n        var user = localStorage.getItem('user')\n        if (!user) {\n            this.props.history.push('/')\n        }\n    }\n\n    handleChange = type => event => {\n        let value = event\n        if (event.target) {\n            value = event.target.value\n        }\n        this.setState({ [type]: value })\n    }\n\n    handleSubmit = event => {\n        const form = event.currentTarget\n        const id = JSON.parse(localStorage.getItem('user'))._id\n        if (form.checkValidity() === true) {\n            var body = { ...this.state }\n            if (this.state.password) {\n                body = { ...body, password: getHash(this.state.password) }\n            }\n            updateAccount(body, id)\n                .then(res => {\n                    toast.success(\"Account updated!!!\")\n                    localStorage.setItem('user', JSON.stringify(res))\n                })\n                .catch(err => {\n                    toast.error(\"Unable to update new data!!!\")\n                })\n        }\n        event.preventDefault()\n        event.stopPropagation()\n    }\n\n    render() {\n        return (\n            <Row style={{ alignItems: 'center', justifyContent: 'center' }}>\n                <Row style={{ width: '60%', padding: 10 }}>\n                    <Col>\n                        <Card style={{ padding: 20 }}>\n                            <Form onSubmit={e => this.handleSubmit(e)}>\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridFName\">\n                                        <Form.Label>First name</Form.Label>\n                                        <Form.Control required type=\"username\" placeholder=\"Enter first name\" onChange={this.handleChange('fname')} value={this.state.fname} />\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridLName\">\n                                        <Form.Label>Last name</Form.Label>\n                                        <Form.Control required type=\"username\" placeholder=\"Enter last name\" onChange={this.handleChange('lname')} value={this.state.lname} />\n                                    </Form.Group>\n                                </Form.Row>\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridPhone\">\n                                        <Form.Label>Phone</Form.Label>\n                                        <Form.Control required type=\"username\" placeholder=\"Enter Phone Number\" onChange={this.handleChange('phone')} value={this.state.phone} />\n                                    </Form.Group>\n                                    <Form.Group as={Col} controlId=\"formGridNIC\">\n                                        <Form.Label>NIC</Form.Label>\n                                        <Form.Control type=\"username\" placeholder=\"Enter NIC\" onChange={this.handleChange('nic')} value={this.state.nic} />\n                                    </Form.Group>\n                                </Form.Row>\n                                <Form.Group controlId=\"controlTextarea1\">\n                                    <Form.Label>Address</Form.Label>\n                                    <Form.Control required as=\"textarea\" rows=\"3\" onChange={this.handleChange('address')} value={this.state.address} />\n                                </Form.Group>\n                                <Form.Group controlId=\"formGridEmail\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control required type=\"email\" placeholder=\"Enter email\" onChange={this.handleChange('email')} value={this.state.email} disabled />\n                                </Form.Group>\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" placeholder=\"Enter New Password\" onChange={this.handleChange('password')} />\n                                </Form.Group>\n                                <Col style={{ paddingRight: 0 }} align='right'>\n                                    <Button variant=\"primary\" type=\"submit\">\n                                        Update account\n                                    </Button>\n                                </Col>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n            </Row>\n        )\n    }\n}\n\nexport default AccountSettings"]},"metadata":{},"sourceType":"module"}